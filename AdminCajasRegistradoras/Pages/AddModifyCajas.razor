@using AdminCajasRegistradoras.Models
@using AdminCajasRegistradoras.DataAnnotations
@inject AdminCajasRegistradoras.Data.ApplicationDbContext db
@inject ISnackbar Snackbar

<MudCard Elevation="2">
    @*<MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Adicionar / Editar Caja</MudText>
        </CardHeaderContent>
    </MudCardHeader>*@
    <MudCardContent>
        <MudForm @bind-IsValid="@success">
            <MudTextField @bind-Value=cajaToSave.Nombre Label="Nombre" Variant="Variant.Text" Margin="Margin.Normal" Placeholder="Nombre..."
                          Required="true" RequiredError="Nombre es requerido">
            </MudTextField>

            <MudNumericField @bind-Value=cajaToSave.Numero Label="Número" Margin="Margin.Normal" Placeholder="Número..." Min=1
                             Required="true" RequiredError="Número es requerido">
            </MudNumericField>
            <MudTextField @bind-Value=cajaToSave.Ip Label="Dirección Ip" Variant="Variant.Text" Margin="Margin.Normal" Placeholder="Dirección Ip..."
                          Required="true" RequiredError="Dirección Ip es requerido"
                          Validation="@(new IpAddressAttribute(){ErrorMessage="La dirección ip no es válida"})">
            </MudTextField>
            <MudNumericField @bind-Value=cajaToSave.Puerto Label="Puerto" Margin="Margin.Normal" Placeholder="Puerto..." Min=1
                             Required="true" RequiredError="Puerto es requerido">
            </MudNumericField>
            <br />
            <MudButton OnClick="Save" Variant="Variant.Filled" Color="Color.Success" Disabled="@(!success)">Salvar Caja</MudButton>
        </MudForm>
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public Caja cajaToSave { get; set; }

    [Parameter]
    public Action OnSuccessfullySave { get; set; }


    private bool success = false;

    private void Save()
    {
        if (cajaToSave.Id == Guid.Empty) //Crear
        {
            cajaToSave.Id = Guid.NewGuid();
            db.Cajas.Add(cajaToSave);
            db.SaveChanges();
            Snackbar.Add($"La caja ha sido adicionada satisfactoriamente", Severity.Success);
            cajaToSave = new Caja();
            OnSuccessfullySave.Invoke();
        }
        else if (cajaToSave.Id != Guid.Empty) //Editar
        {
            var caja = db.Cajas.FirstOrDefault(c => c.Id == cajaToSave.Id);
            if (caja == null)
            {
                Snackbar.Add($"La caja con id {cajaToSave.Id} que intenta editar no existe", Severity.Warning);
            }
            else
            {
                caja = cajaToSave;
                db.SaveChanges();
                cajaToSave = new Caja();
                Snackbar.Add($"La caja ha sido editada satisfactoriamente", Severity.Success);
                OnSuccessfullySave.Invoke();
            }
        }
    }
}
